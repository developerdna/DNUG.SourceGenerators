using System.Reflection;

namespace DNUG.SourceGenerators.EnumParsing.Marker;

internal sealed class EnumParserSourceGeneratorMarkerAttribute
{
    internal const string AttributeName = "EnumParse";

    private static readonly AssemblyName AssemblyName =
        typeof(EnumParserSourceGeneratorMarkerAttribute).Assembly.GetName();

    internal static readonly string Namespace = AssemblyName.Name;

    internal static readonly string MarkerAttributeSourceCode = $$"""
                                                                  // <auto-generated/>
                                                                  namespace {{Namespace}};

                                                                  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{AssemblyName.Name}}", "{{AssemblyName.Version}}")]
                                                                  [global::System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = true)]
                                                                  public class {{AttributeName}}<TEnum> : global::System.Attribute
                                                                      where TEnum : struct, global::System.Enum;
                                                                  """;
}